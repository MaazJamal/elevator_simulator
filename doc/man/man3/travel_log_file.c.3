.TH "C:/Users/Work/git_repo/elevator_simulator/src/travel_log_file.c" 3 "Fri Apr 24 2020" "Version 2.0" "Elevator Simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/Work/git_repo/elevator_simulator/src/travel_log_file.c \- Contains the deifintion of \fBtravel_log_file()\fP this function writes useful logs about the travel of the passengers\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'travel_log_file\&.h'\fP
.br
\fC#include 'structures\&.h'\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include 'average_waiting_time\&.h'\fP
.br
\fC#include 'max_waiting_time\&.h'\fP
.br
\fC#include <stdbool\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBtravel_log_file\fP (struct \fBpassenger\fP traveler, unsigned int event_time, int elevator_index, int mode)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Contains the deifintion of \fBtravel_log_file()\fP this function writes useful logs about the travel of the passengers\&. 


.PP
\fBAuthor\fP
.RS 4
Maaz Jamal 
.RE
.PP

.PP
Definition in file \fBtravel_log_file\&.c\fP\&.
.SH "Function Documentation"
.PP 
.SS "void travel_log_file (struct \fBpassenger\fP traveler, unsigned int event_time, int elevator_index, int mode)"
This function generates and updates the outputput files for data processin
.PP
This function generates the output file waiting_times\&.txt and travel_log\&.txt which contain the average and max waiting time, and the user_id,elevator_id, passenger arrival time passenger leaving time\&.
.PP
\fBParameters\fP
.RS 4
\fItraveler\fP struct containing details about the passenger 
.br
\fIevent_time\fP the time the event to be recorded happened\&. 
.br
\fIelevator_index\fP the index of the elevator the passenger was in\&. 
.br
\fImode\fP 1 for writing to travel_log\&.txt, 2 for calculating average and max time,3 for writing waiting_times\&.txt log file)
.RE
.PP
\fBReturns\fP
.RS 4
does not return an value 
.RE
.PP
This keeps track if the output path file is being opened for first time
.PP
relative path to the travel_log\&.txt file path
.PP
Definition at line 30 of file travel_log_file\&.c\&.
.PP
.nf
31 {
32 
33     static bool first_call = true;                             
34     char *travel_file_path = "data/travel_log\&.txt";             
35     char *waiting_times_files_path = "data/waiting_times\&.txt"; //relative path to waiting_times\&.txt file path
36     FILE *f;
37     float diff;
38     switch (mode)
39     {
40 
41     case 1: //This case is to write to travel_log file
42         if (first_call)
43         {
44             f = fopen(travel_file_path, "w+");
45             if (f == NULL)
46             {
47                 fprintf(stderr, "Could not create/open travel_log\&.txt file\&.\n");
48                 exit(-1);
49             }
50             first_call = false;
51             fprintf(f, "Passenger_ID,Elevator_ID,Passenger_In_time,Passenger_Entry_floor,Passenger_Out_time,Passenger_Exit_floor\n");
52         }
53         else
54         {
55             f = fopen(travel_file_path, "a+");
56             if (f == NULL)
57             {
58                 fprintf(stderr, "Could not create/open travel_log\&.txt file\&.\n");
59                 exit(-1);
60             }
61         }
62 
63         int id = traveler\&.id;
64         int in_time = traveler\&.arrival_time;
65         int in_floor = traveler\&.arrival_floor;
66         int out_floor = traveler\&.dest_floor;
67         fprintf(f, "%d,%d,%d,%d,%d,%d\n", id, elevator_index, in_time, in_floor, event_time, out_floor);
68         fflush(f);
69         fclose(f);
70         break;
71     case 2:
72         //This case is to calculate max and average wait time\&.
73 
74         diff = event_time - traveler\&.arrival_time;
75         if (diff < 0\&.0)
76         {
77             fprintf(stderr, "Negative time difference\&.\n");
78             exit(-1);
79         }
80         average_waiting_time(diff);
81         max_waiting_time(diff);
82         break;
83     case 3: //This case is to write to waiting time
84         f = fopen(waiting_times_files_path, "w+");
85         if (f == NULL)
86         {
87             fprintf(stderr, "Could not create waiting_times\&.txt file\&.\n");
88             exit(-1);
89         }
90         float avg_time = average_waiting_time(-1\&.0);
91         float max_time = max_waiting_time(-1\&.0);
92         fprintf(f, "Average Waiting time of Passenger: %f\n", avg_time);
93         fprintf(f, "Maximum Waiting time of Passenger: %f\n", max_time);
94         fflush(f);
95         fclose(f);
96         break;
97     default:
98         fprintf(stderr, "Incorrect mode selection\&.");
99         exit(-1);
100     }
101 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Elevator Simulator from the source code\&.
