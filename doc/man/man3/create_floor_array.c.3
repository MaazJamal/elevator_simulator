.TH "C:/Users/Work/git_repo/elevator_simulator/src/create_floor_array.c" 3 "Fri Apr 24 2020" "Version 2.0" "Elevator Simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/Work/git_repo/elevator_simulator/src/create_floor_array.c \- The function create arrays for every floor\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include 'create_floor_array\&.h'\fP
.br
\fC#include 'globals\&.h'\fP
.br
\fC#include 'structures\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBpassenger\fP ** \fBcreate_floor_array\fP (int no_of_floors)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The function create arrays for every floor\&. 


.PP
\fBAuthor\fP
.RS 4
Hariprasad Munusamy - HariprasadMunusamy@cmail.carleton.ca 
.RE
.PP

.PP
Definition in file \fBcreate_floor_array\&.c\fP\&.
.SH "Function Documentation"
.PP 
.SS "struct \fBpassenger\fP** create_floor_array (int no_of_floors)"
Creates array for every floor to store the passenger with requests\&.
.PP
\fBParameters\fP
.RS 4
\fIGets\fP the number of floors as input and creates a list of array for every floor\&.
.RE
.PP
\fBReturns\fP
.RS 4
structure of arrays for the given number of floors\&. 
.RE
.PP

.PP
Definition at line 24 of file create_floor_array\&.c\&.
.PP
.nf
25  {
26     if(no_of_floors>floor_count)
27     {
28         return 0;
29     }
30     struct passenger **fla;
31     fla=(struct passenger **) calloc (no_of_floors,sizeof(struct passenger*));
32     if(fla==NULL)
33     {
34         return 0;
35     }
36     else
37     {
38 
39     return fla; //returns the pointer to a structure of array
40     }
41 
42 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Elevator Simulator from the source code\&.
