.TH "C:/Users/Work/git_repo/elevator_simulator/include/input_floors.h" 3 "Fri Apr 24 2020" "Version 2.0" "Elevator Simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/Work/git_repo/elevator_simulator/include/input_floors.h \- Obtains the floor count-Total number of floors in the building\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'structures\&.h'\fP
.br
\fC#include 'globals\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBinput_floors\fP (void)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Obtains the floor count-Total number of floors in the building\&. 


.PP
Definition in file \fBinput_floors\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "int input_floors (void)"
Constraints If the floor count is 0 ,the function displays a error message and returns -1\&. If the floor count is less than 1(negative values) ,the function displays a error message and returns -1\&. If the floor count is greater than 100,the function displays a error message and returns -1\&. Floating point values entered considered to near integers\&. 
.PP
\fBReturns\fP
.RS 4
The function accepts only values between 1 and 100 and returns the value;otherwise returns -1 and displays error message\&. 
.RE
.PP

.PP
Definition at line 20 of file input_floors\&.c\&.
.PP
.nf
21 {
22     int local_floor_count;
23 
24     printf("Enter the number of floors in the building-VALID INPUTS ARE FROM 1 TO 100\n");
25     scanf("%d", &local_floor_count);
26     //Following checks are performed to see if the entered value is erraneous\&.
27     if (local_floor_count == 0)
28     {
29         printf("Entered number of floor invalid \n");
30         local_floor_count = -1;
31     }
32     else if (local_floor_count < 1)
33     {
34         printf("Entered number of floor is negative value and hence invalid \n");
35         local_floor_count = -1;
36     }
37     else if (local_floor_count > 100)
38     {
39         printf("Entered number of floor is greater than 100 and hence invalid \n");
40         local_floor_count = -1;
41     }
42     //discards the values stored in stdin buffer\&.
43     scanf("%*[^\n]");
44     return local_floor_count;
45 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Elevator Simulator from the source code\&.
