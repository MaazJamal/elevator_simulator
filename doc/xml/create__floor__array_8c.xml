<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="create__floor__array_8c" kind="file" language="C++">
    <compoundname>create_floor_array.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="yes">create_floor_array.h</includes>
    <includes local="yes">globals.h</includes>
    <includes local="yes">structures.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>structures.h</label>
      </node>
      <node id="4">
        <label>create_floor_array.h</label>
      </node>
      <node id="5">
        <label>globals.h</label>
      </node>
      <node id="1">
        <label>create_floor_array.c</label>
        <link refid="create__floor__array_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="create__floor__array_8c_1aa7321679c44d6dcf3ff9241a44ab38c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct passenger **</type>
        <definition>struct passenger** create_floor_array</definition>
        <argsstring>(int no_of_floors)</argsstring>
        <name>create_floor_array</name>
        <param>
          <type>int</type>
          <declname>no_of_floors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates array for every floor to store the passenger with requests.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Gets</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of floors as input and creates a list of array for every floor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>structure of arrays for the given number of floors. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="create_floor_array.c" line="24" column="18" bodyfile="create_floor_array.c" bodystart="24" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The function create arrays for every floor. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Hariprasad Munusamy - <ulink url="mailto:HariprasadMunusamy@cmail.carleton.ca">HariprasadMunusamy@cmail.carleton.ca</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;create_floor_array.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;globals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;structures.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passenger<sp/>**<sp/><ref refid="create__floor__array_8c_1aa7321679c44d6dcf3ff9241a44ab38c1" kindref="member">create_floor_array</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>no_of_floors)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(no_of_floors&gt;floor_count)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passenger<sp/>**fla;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>fla=(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">passenger<sp/>**)<sp/>calloc<sp/>(no_of_floors,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>passenger*));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fla==NULL)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fla;<sp/></highlight><highlight class="comment">//returns<sp/>the<sp/>pointer<sp/>to<sp/>a<sp/>structure<sp/>of<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="create_floor_array.c"/>
  </compounddef>
</doxygen>
